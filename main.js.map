{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/flight-search/flight-card.component.html","webpack:///./src/app/flight-search/flight-card.component.ts","webpack:///./src/app/flight-search/flight-search.component.html","webpack:///./src/app/flight-search/flight-search.component.ts","webpack:///./src/app/flight-search/flight.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,+F;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,gCAAgC,CAAC;IAC3C,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACF;AACI;AACA;AACL;AACsC;AACjB;AACa;AAqB5E;IAAA;IAEA,CAAC;IAFY,SAAS;QAnBrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;gBACV,4DAAY,CAAC,OAAO,CAAC,sDAAU,CAAC;aACjC;YACD,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4FAAqB;gBACrB,yFAAmB;aACpB;YACD,SAAS,EAAE;gBACT,2EAAa;gBACb,sDAAsD;gBACtD,gBAAgB;aACjB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAErB;IAAD,gBAAC;CAAA;AAFqB;;;;;;;;;;;;;AC7BtB;AAAA;AAAA;AAAgF;AAEzE,IAAM,UAAU,GAAW;IAC9B;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,QAAQ;KACtB;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,4FAAqB;KACnC;IACD;QACI,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,MAAM;KACrB;CACJ;;;;;;;;;;;;ACjBD,iCAAiC,aAAa,KAAK,kBAAkB,6BAA6B,mBAAmB,wBAAwB,0CAA0C,sBAAsB,wCAAwC,uBAAuB,eAAe,uBAAuB,eAAe,0BAA0B,iBAAiB,qBAAqB,aAAa,sBAAsB,cAAc,iB;;;;;;;;;;;;;;;;;ACA3W;AAOvE;IAJA;QAOY,mBAAc,GAAG,IAAI,0DAAY,EAAW,CAAC;IAYzD,CAAC;IAVC,oCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAZQ;QAAR,2DAAK,EAAE;;qDAAc;IACb;QAAR,2DAAK,EAAE;;yDAAmB;IACjB;QAAT,4DAAM,EAAE;;+DAA8C;IAH5C,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,uHAA2C;SAC5C,CAAC;OACW,mBAAmB,CAe/B;IAAD,0BAAC;CAAA;AAf+B;;;;;;;;;;;;ACPhC,ktCAAktC,iCAAiC,eAAe,MAAM,iBAAiB,kCAAkC,iBAAiB,QAAQ,iBAAiB,MAAM,qJAAqJ,gBAAgB,wB;;;;;;;;;;;;;;;;;;ACAt+C;AAGO;AAOjD;IAkBE,qBAAqB;IAErB,+BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAVhD,yCAAyC;QAEzC,WAAM,GAAW;YACf,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,IAAI;SACV,CAAC;QAKA,mBAAmB;QACnB,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACtC,CAAC;IAID,sBAAI,0CAAO;QAFX,+BAA+B;aAE/B;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACpC,CAAC;;;OAAA;IAED,sCAAM,GAAN;QAEE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE1F,CAAC;IAED,sCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC1B,CAAC;IAvCU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,2HAA6C;SAE9C,CAAC;+EAqBmC,6DAAa;OApBrC,qBAAqB,CAwCjC;IAAD,4BAAC;CAAA;AAxCiC;;;;;;;;;;;;;;;;;;;ACVS;AAGoB;AAG/D;IAIE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAF9B,YAAO,GAAa,EAAE,CAAC;QAGrB,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;IACpD,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAc,EAAE,WAAmB,EAAE,YAAoB,EAAE,SAAiB;QAAjF,iBA2BC;QA1BC,IAAI,MAAM,GAAG,IAAI,6DAAe,EAAE,CAAC;QACnC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACvC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;QACxC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAE1C,+CAA+C;QAE/C,IAAI,GAAG,GAAG,2DAA2D,CAAC;QAEtE,IAAI;aACC,IAAI;aACJ,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,UAAE,OAAO,WAAE,CAAC;aAC7B,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;aAC1B,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC,CACF;IAEL,CAAC;IAnCU,aAAa;QADzB,gEAAU,EAAE;+EAKe,kDAAI;OAJnB,aAAa,CAqCzB;IAAD,oBAAC;CAAA;AArCyB;;;;;;;;;;;;;ACN1B;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAE1B;AAE/B,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAID,gGAAsB,EAAE;KACjB,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'flight-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'United Airlines Flight Details';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from \"@angular/router\";\nimport { APP_ROUTES } from \"./app.routes\";\nimport { FlightSearchComponent } from './flight-search/flight-search.component';\nimport { FlightService } from './flight-search/flight.service';\nimport { FlightCardComponent } from './flight-search/flight-card.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  declarations: [\n    AppComponent,\n    FlightSearchComponent,\n    FlightCardComponent\n  ],\n  providers: [\n    FlightService\n    // { provide: FlightService, useClass: FlightService }\n    // FlightService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { Routes } from '@angular/router';\nimport { FlightSearchComponent } from './flight-search/flight-search.component';\n\nexport const APP_ROUTES: Routes = [\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'prefix'\n    },\n    {\n        path: 'flight-search',\n        component: FlightSearchComponent\n    },\n    {\n        path: '**',\n        redirectTo: 'home'\n    }\n]\n","module.exports = \"<div>\\n  <h2>{{item.origin}} - {{item.destination}}</h2>\\n  <p>Flight Number: {{item.flightNumber}}</p>\\n  <p>Departure: {{item.departure | date:'dd.MM.yyyy HH:mm'}}</p>\\n  <p>Arrival: {{item.arrival | date:'dd.MM.yyyy HH:mm'}}</p>\\n  <p>Aircraft: {{item.aircraft}}</p>\\n  <p>Distance: {{item.distance}}</p>\\n  <p>Travel Time: {{item.travelTime}}</p>\\n  <p>Status: {{item.status}}</p>\\n  <p>Carrier: {{item.carrier}}</p>\\n\\n</div>\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Flight } from '../entities/flight';\n\n@Component({\n  selector: 'flight-card',\n  templateUrl: './flight-card.component.html'\n})\nexport class FlightCardComponent {\n  @Input() item: Flight;\n  @Input() selected: boolean;\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  select() {\n    this.selected = true;\n    this.selectedChange.next(this.selected);\n  }\n\n  deselect() {\n    this.selected = false;\n    this.selectedChange.next(this.selected);\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"card row\\\">\\n<h1>Flight Search</h1>\\n\\n<div class=\\\"control-group\\\">\\n  <label>Origin:</label>\\n  <input [(ngModel)]=\\\"origin\\\" class=\\\"form-control\\\">\\n</div>\\n<div class=\\\"control-group\\\">\\n  <label>Destination:</label>\\n  <input [(ngModel)]=\\\"destination\\\" class=\\\"form-control\\\">\\n</div>\\n<div class=\\\"control-group\\\">\\n  <label>Flight Number:</label>\\n  <input [(ngModel)]=\\\"flightNumber\\\" class=\\\"form-control\\\">\\n</div>\\n<div class=\\\"control-group\\\">\\n  <label>Travel Date:</label>\\n  <input type=\\\"date\\\" placeholder=\\\"yyyy-MM-dd\\\" [(ngModel)]=\\\"departure\\\" class=\\\"form-control\\\">\\n</div>\\n\\n\\n<div class=\\\"control-group\\\">\\n  <button\\n    class=\\\"btn btn-default\\\"\\n    (click)=\\\"search()\\\"\\n    [disabled]=\\\"!origin || !destination\\\">\\n    Search\\n  </button>\\n</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n<div *ngFor=\\\"let f of flights\\\" class=\\\"col col-lg-3 col-md-4 col-sm-6 col-xs-12\\\">\\n  <flight-card\\n    [item]=\\\"f\\\"\\n    [(selected)]=\\\"basket[f.id]\\\">\\n  </flight-card>\\n  <!-- (selectedChange)=\\\"basket[f.id] = $event\\\" -->\\n</div>\\n</div>\\n<!--\\n<div class=\\\"card\\\" *ngIf=\\\"flights.length > 0\\\">\\n<table class=\\\"table table-contensed\\\">\\n  <tr *ngFor=\\\"let f of flights\\\" [ngClass]=\\\"{ 'active': f === selectedFlight }\\\">\\n    <td>{{f.id}}</td>\\n    <td>{{f.date | date:'dd.MM.yyyy HH:mm'}}</td>\\n    <td>{{f.from}}</td>\\n    <td>{{f.to}}</td>\\n    <td><a (click)=\\\"select(f)\\\">Select</a></td>\\n  </tr>\\n</table>\\n</div>\\n\\n<div class=\\\"row card\\\">\\n<pre>Warenkorb\\n-----------------\\n{{ basket | json}}\\n</pre>\\n</div>\\n-->\\n\"","import { Component } from '@angular/core';\nimport { Flight } from '../entities/flight';\nimport { Http, Headers, URLSearchParams } from '@angular/http';\nimport { FlightService } from './flight.service';\n\n@Component({\n  selector: 'flight-search',\n  templateUrl: './flight-search.component.html',\n  //providers: [FlightService]\n})\nexport class FlightSearchComponent {\n\n  origin: string;\n  destination: string;\n  flightNumber: string;\n  departure: string;\n\n\n  selectedFlight: Flight;\n\n  // any: number, booleans, string, objects\n\n  basket: object = {\n    \"3\": true,\n    \"4\": false,\n    \"5\": true\n  };\n\n  //private http: Http;\n\n  constructor(private flightService: FlightService) {\n    //this.http = http;\n    console.debug('IN flight service!');\n  }\n\n  // flights: Array<Flight> = [];\n\n  get flights(): Array<Flight> {\n    return this.flightService.flights;\n  }\n\n  search(): void {\n\n    this.flightService.find(this.origin, this.destination,this.flightNumber,this.departure);\n\n  }\n\n  select(f: Flight) {\n    this.selectedFlight = f;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Flight } from '../entities/flight';\nimport { Http, URLSearchParams, Headers } from '@angular/http';\n\n@Injectable()\nexport class FlightService {\n\n  flights: Flight[] = [];\n\n  constructor(private http: Http) {\n    console.debug('Liebesgrüße aus dem Konstruktor!');\n  }\n\n  find(origin: string, destination: string, flightNumber: string, departure: string): void {\n    let search = new URLSearchParams();\n    search.set('origin', origin);\n    search.set('destination', destination);\n    search.set('flightNumber',flightNumber);\n    search.set('departure', departure);\n\n    let headers = new Headers();\n    headers.set('Accept', 'application/json');\n\n    //let url = 'http://www.angular.at/api/flight';\n\n    let url = 'http://localhost:8080/UnitedFlightSearch/getFlightDetails';\n\n    this\n        .http\n        .get(url, { search, headers })\n        .map(resp => resp.json())\n      .subscribe(\n        flights => {\n          this.flights = flights;\n        },\n        err => {\n          console.error('Console Error', err);\n        }\n      )\n\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'rxjs/add/operator/map';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\n\nplatformBrowserDynamic()\n      .bootstrapModule(AppModule);\n"],"sourceRoot":""}